///////////////////////////////////////////////////////////////////////////////
//
// Database.h
//
// 	Info Database utility for CDDA and DAT.
//
//
// Copyright 1996, Silicon Graphics, Inc.
// ALL RIGHTS RESERVED
//
// UNPUBLISHED -- Rights reserved under the copyright laws of the United
// States.   Use of a copyright notice is precautionary only and does not
// imply publication or disclosure.
//
// U.S. GOVERNMENT RESTRICTED RIGHTS LEGEND:
// Use, duplication or disclosure by the Government is subject to restrictions
// as set forth in FAR 52.227.19(c)(2) or subparagraph (c)(1)(ii) of the Rights
// in Technical Data and Computer Software clause at DFARS 252.227-7013 and/or
// in similar or successor clauses in the FAR, or the DOD or NASA FAR
// Supplement.  Contractor/manufacturer is Silicon Graphics, Inc.,
// 2011 N. Shoreline Blvd. Mountain View, CA 94039-7311.
//
// THE CONTENT OF THIS WORK CONTAINS CONFIDENTIAL AND PROPRIETARY
// INFORMATION OF SILICON GRAPHICS, INC. ANY DUPLICATION, MODIFICATION,
// DISTRIBUTION, OR DISCLOSURE IN ANY FORM, IN WHOLE, OR IN PART, IS STRICTLY
// PROHIBITED WITHOUT THE PRIOR EXPRESS WRITTEN PERMISSION OF SILICON
// GRAPHICS, INC.
///////////////////////////////////////////////////////////////////////////////

#ifndef _DATABASE_H
#define _DATABASE_H

#include <dmedia/dmedia.h>
#include "Player.h"

#define MAXNAME		450
#define MAXCLASS	450
#define MAXPATHLEN       1024
#define	DB_RDB_EXT	"rdb"
#define UNKNOWN_STRING	"<Unknown>"
#define UNKNOWN_TITLE_STRING	"<Unknown Title>"
#define UNKNOWN_ARTIST_STRING	"<Unknown Artist>"
#define UNKNOWN_DURATION_STRING	"<Unknown Album Duration>"
#define UNKNOWN_TRACKS_STRING	"<Unknown Number of Tracks>"
#define UNKNOWN_TRACKNAME_STRING "<Unknown Track Name>"
#define UNKNOWN_TRACKSTART_STRING "<Unknown Track Start>"
#define UNKNOWN_TRACKDURATION_STRING "<Unknown Track Duration>"

// This file defines the Database class, that is used by cdman to extract the title,
// artist, and track title information for every cd.

class Database;
extern Database* theDatabase;

class Database 
{
public:
  Database(ScsiDevice device);
  ~Database();

  // called when a new cd is encountered.
  // returns 1 if it knows about this cd, else 0.
  // id is a unique key associated with this cd, it
  // is generated by the server.
  DMboolean initialize(const char* id);	
  DMboolean isInitialized();	

  void terminate();	// called when you are done with this cd.

  // member functions to query data base.
  // Call only after call to initialize(), and before call to terminate().
  char* getTitle();	// returns the name of the title of current cd.
  char* getArtistName();
  char* getTrackTitle(int);
  char* getAlbumDuration();
  char* getAlbumTracks();
  char* getTrackStart(int);
  char* getTrackDuration(int);

  // member functions to allow you to append to the database
  void setTitle(char*);
  void setArtistName(char*);
  void setAlbumDuration(char*);
  void setAlbumTracks(int);
  void setTrackTitle(int, char*);
  void setTrackStart(int, DMtimecode*);
  void setTrackStart(int, unsigned long);
  void setTrackDuration(int, DMtimecode*);
  void setTrackDuration(int, unsigned long);
  void save();
  XrmDatabase xDb() { return _xdb; };
  
protected:

  char* _filename;		// database for the current cd.
  char* _path;		// to look for the database files
  int _pathCount;		// number of elements in the path list.
  XrmDatabase _xdb;

  // utility routine that does the actual extraction 
  // from the database.

  char* extract(char* resourceName, char* resourceClass,
		char* defaultString = UNKNOWN_STRING);

};

#endif
